bits 32 ; assembling for the 32 bits architecture

; declare the EntryPoint (a label defining the very first instruction of the program)
global start     

; declare external functions needed by our program
extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
import printf msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions

; our data is declared here (the variables needed by our program)
segment data use32 class=data
    ; ...
    format db '%d', 0
; our code starts here B C E F
segment code use32 class=code
    start:
        mov eax, [a]
        mov ebx, eax
        shl ebx, 1
        jc done
        shr ebx, 1
        jnc done
        shr ebx, 1
        jnc label1
        
        push eax
        push dword format
        call [printf]
        add esp, 4*2
        jmp done
        
        label1:
        neg eax
        push eax
        push dword format
        call [printf]
        
        done:
        push    dword 0      ; push the parameter for exit onto the stack
        call    [exit]       ; call exit to terminate the program
